<p id="notice"><%= notice %></p>

<div class="button-list">
  <button class="ui icon button screenshot" id="screenshot"><i class="photo icon"></i></button>
  <button class="ui icon button gif" id="gif"><i class="video play icon"></i></button>
  <div class="ui popup bottom right transition hidden">
    <input type="text" class="copy" readonly>
    <i class="copy icon"></i>
  </div>
  <div class="ui icon button info-popup"><i class="info circle icon"></i></div>
  <div class="ui flowing popup bottom right transition hidden">
    <p><%= @video.title %></p>
    <p>Season <%= @video.season %> Episode <%= @video.episode_number %></p>
  </div>
</div>

<video id="video" class="video-js vjs-big-play-centered" controls preload="auto" poster="<%= @video.thumbnail_path %>">
  <track kind="captions" src="<%= @video.subtitle_path %>" srclang="en" label="English" default>
  <p class="vjs-no-js">
    To view this video please enable JavaScript, and consider upgrading to a web browser that
    <a href="http://videojs.com/html5-video-support/" target="_blank">supports HTML5 video</a>
  </p>
</video>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/shaka-player/2.0.0-beta2/shaka-player.compiled.debug.js"></script>
<script src="http://shaka-player-demo.appspot.com/demo/controls.js"></script>
<script type="text/javascript">
  var manifestUri = "<%= @video.dash_path%>";
  function initApp() {
  // Install built-in polyfills to patch browser incompatibilities.
  shaka.polyfill.installAll();

  // Check to see if the browser supports the basic APIs Shaka needs.
  // This is an asynchronous check.
  shaka.Player.support().then(function(support) {
    // This executes when the asynchronous check is complete.
    if (support.supported) {
      // Everything looks good!
      initPlayer();
    } else {
      // This browser does not have the minimum set of APIs we need.
      console.error('Browser not supported!');
    }
  });
}

function initPlayer() {
  // Create a Player instance.
  var video = document.getElementById('video');
  var player = new shaka.Player(video);

  // Attach player to the window to make it easy to access in the JS console.
  window.player = player;

  // Listen for error events.
  player.addEventListener('error', onErrorEvent);

  // Try to load a manifest.
  // This is an asynchronous process.
  player.load(manifestUri).then(function() {
    // This runs if the asynchronous load is successful.
    console.log('The video has now been loaded!');
  }).catch(onError);  // onError is executed if the asynchronous load fails.
}

function onErrorEvent(event) {
  // Extract the shaka.util.Error object from the event.
  onError(event.detail);
}

function onError(error) {
  // Log the error.
  console.error('Error code', error.code, 'object', error);
}

document.addEventListener('DOMContentLoaded', initApp);
</script>

